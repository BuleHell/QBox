1.关于乱码问题：
        设置统一编码：
        在main中加入：
     QTextCodec::setCodecForTr(QTextCodec::codecForName("utf-8"));
     QTextCodec::setCodecForLocale(QTextCodec::codecForName("utf-8"));
     QTextCodec::setCodecForCStrings(QTextCodec::codecForName("utf-8"));
之后，无论使用：
        1.          qDebug()<<"字符";
        2.          qDebug()<<QObject::tr("字符");
        3.          QString a="字符";
        4.          qDebug()<<a;
都不会存在字符的乱码问题
2.在Qt中使用Qsetrings来进行记录数据，不要使用注册表，等等之类的来记录数据，因为，那样没有跨平台性
3.自定义关闭和打开按钮，防止，不同的系统不一样、
4.使用CSS来美化界面

5.聊天界面使用WEBKIT来实现
也可以是使用QTextBorrow来进行设计（使用HTML）
6.关于TCP：
        Qt给出了一个方案：
                 fortu  就可以搜索出来了
 Anychat：跨平台解决方案

 V4L：图像采集技术 V4L(Video  for  Linux  )是 Linux 内核中关于语音设备的子系统

好友列表： QtableWidget 
//代码展示：
int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    Widget w;
    loginDlg login;
    if(login.exec()==QDialog::Accepted)
    {
        w.show();
        return a.exec();
    }
    else return 0;
}


   QString msg = ui->textEdit->toHtml();
        QString time = QDateTime::currentDateTime().toString("yyyy-MM-dd hh:mm:ss");